package com.kh.member.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.kh.member.model.service.MemberService;
import com.kh.member.model.vo.Member;

/**
 * Servlet implementation class LoginController
 */
@WebServlet("/login.me")
public class LoginController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public LoginController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		/* 
		 * <HttpServletRequest 객체와 HttpServletResponse 객체>
		 * - request : 서버로 요청할 때의 정보들이 담겨있음(요청시 전달한 값, 전송방식 등)
		 * - response : 요청에 대해 응답할때 필요한 객체
		 * 
		 * <GET 방식과 POST방식 차이>
		 * - GET 방식 : 사용자가 입력한 값들이 url 노출 O/ 데이터 길이제한 O/ 즐겨찾기 기능상 편리
		 * - POST 방식 : 						X	/		X		/ 대신 Timeout이 존재(시간이 지나도 응답받지못하면 에러페이지 발생)
		 * get과 post 방식의 가장 큰 차이는 url에 노출되냐 되지 않느냐임
		 * 
		 */
		
		// 1) 전달값에 한글이 있을 경우 인코딩 처리해야함(POST방식일때만)
		request.setCharacterEncoding("UTF-8");
		
		// 2) 요청 시 전달값을 꺼내서 변수 OR 객체에 기록
		String userId = request.getParameter("userId");
		String userPwd = request.getParameter("userPwd");
		
		// 3) 해당 요청을 처리하는 서비스 클래스의 메소드 호출
		Member loginUser = new MemberService().loginMember(userId, userPwd);
		
		// 4) 처리된 결과를 가지고 사용자가 보게될 화면(view)를 지정 후 포워딩 or url 재요청
		
		/*
		 * 응답 페이지에 전달한 값이 있을 경우 값을 어딘가에 담아야함 (담아줄수 있는 Servlet Scope의 내장객체 4종류)
		 * 
		 * 1)application : application에 담은 데이터는 웹 애플리케이션 전역에서 다 꺼내 쓸수 있음
		 * 2) session : session에 담은 데이터는 모든 jsp와 servlet에서 꺼내 쓸 수 있음
		 * 				한번 담은 데이터는 내가 직접 지우기 전까지, 서버가 멈추기 전까지, 브러우저가 종료되기 전까지 접근해서 꺼내 쓸 수 있음
		 * 3) request : request에 담은 데이터는 해당 request를 포워딩한 응답 jsp에서만 꺼내쓸수 있다
		 * 4) page : jsp에서만 꺼내쓸수 있다.
		 * 
		 * => session과 request를 주로 쓴다.
		 * 
		 * 공통적으로 데이터를 담을때 : .setAttribute("키", "벨류");
		 * 					꺼낼때 : .gettAttribute("키");
		 * 					지울때 : .removeAttribute("키");
		 */
		
		
		
		
		
		
		
		
		
		
	}

}
